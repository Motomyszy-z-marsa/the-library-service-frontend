{"ast":null,"code":"var _jsxFileName = \"/Users/weronikaficek/Desktop/PROJEKTY/the-library-service-frontend/the-library-service-frontend/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport classes from \"./SimpleInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [enteredPasswordIsValid, setEnteredPasswordIsValid] = useState(false);\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const passwordInputChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n\n  const passwordInputBlurHandler = event => {\n    setEnteredPasswordTouched(true);\n\n    if (enteredPassword.trim() === \"\") {\n      setEnteredPasswordIsValid(false);\n      return;\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredPasswordTouched(true);\n\n    if (enteredName.trim() === \"\" || enteredPassword.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      setEnteredPasswordIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    setEnteredPasswordIsValid(true);\n    console.log(enteredName);\n    console.log(enteredPassword);\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched && !enteredPasswordIsValid && enteredPasswordTouched;\n  const InputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: passwordInputChangeHandler,\n        onBlur: passwordInputBlurHandler,\n        value: enteredPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"esh96/pXHAuqW5R+6lTxXTVbKfo=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","classes","SimpleInput","props","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","enteredPassword","setEnteredPassword","enteredPasswordIsValid","setEnteredPasswordIsValid","enteredPasswordTouched","setEnteredPasswordTouched","nameInputChangeHandler","event","target","value","passwordInputChangeHandler","nameInputBlurHandler","trim","passwordInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputIsInvalid","InputClasses","form"],"sources":["/Users/weronikaficek/Desktop/PROJEKTY/the-library-service-frontend/the-library-service-frontend/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport classes from \"./SimpleInput.module.css\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [enteredPasswordIsValid, setEnteredPasswordIsValid] = useState(false);\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const passwordInputChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n\n  const passwordInputBlurHandler = (event) => {\n    setEnteredPasswordTouched(true);\n    if (enteredPassword.trim() === \"\") {\n      setEnteredPasswordIsValid(false);\n      return;\n    }\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredPasswordTouched(true);\n\n    if (enteredName.trim() === \"\" || enteredPassword.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      setEnteredPasswordIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    setEnteredPasswordIsValid(true);\n    console.log(enteredName);\n    console.log(enteredPassword);\n  };\n\n  const nameInputIsInvalid =\n    !enteredNameIsValid &&\n    enteredNameTouched &&\n    !enteredPasswordIsValid &&\n    enteredPasswordTouched;\n  const InputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form className={classes.form} onSubmit={formSubmissionHandler}>\n      <div className={InputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n        <label>Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          onChange={passwordInputChangeHandler}\n          onBlur={passwordInputBlurHandler}\n          value={enteredPassword}\n        ></input>\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}